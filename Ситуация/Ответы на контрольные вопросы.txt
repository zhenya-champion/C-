1.	Что такое класс-группа? Привести примеры таких классов.
Группа  это объект, в который включены другие объекты. Объекты, входящие в группу, называются элементами группы. Элементы группы, в свою очередь, могут быть группой.
Примеры групп:
1.	Окно в интерактивной программе, которое владеет такими элементами, как поля ввода и редактирования данных, кнопки, списки выбора, диалоговые окна и т.д. Примерами таких окон являются объекты классов, порожденных от абстрактного класса TGroup( TDeskTop, TWindow, TDialog) в иерархии классов библиотеки Turbo Vision, и объекты классов, порожденных от TWindowObject в иерархии классов библиотеки OWL.
2.	Агрегат, состоящий из более мелких узлов.
3.	Огород, состоящий из растений, системы полива и плана выращивания.
4.	Некая организационная структура	(например, ФАКУЛЬТЕТ, КАФЕДРА, 

2.	Привести пример описания класса-группы Список (List).
list <int> mylist;
  list <int> listmerge = {7, 8, 9};
 
  for (int i = 0; i < 2; i++) {
    for (int j = 1; j < 6; j++) {
      mylist.push_back(i); // добавили 10 элементов
    }
  }

3.	Привести пример конструктора (с параметром, без параметров, копирования) для класса-группы Список.
class list
{
public:
  stack (): top(0) // конструктор без параметров
  {}

4.	Привести пример деструктора для класса-группы Список.
struct Node {
  Node *next;
  // ...
};
// ...
~List() {
  while (first != NULL {
    Node *next = first->next;
    delete first;
    first = next;
  }
}
//...

5.	Привести пример метода для просмотра элементов для класса-группы Список.
class List
{
    private:
    int size;
    struct list
    {
       int data;
       list* next;
    };
    list* head;
   public:
      void Print();
      void Print_Output();
      void Sort();
      List(int size = 0);
      List(const List&);
      ~List();     
};

6.	Какой вид иерархии дает группа?
Группа дает второй вид иерархии	- иерархию объектов(иерархию типа целое/часть),	
построенную на основе агрегации, первый вид  иерархия классов, построенная на основе наследования.

7.	Почему во главе иерархии классов, содержащихся в группе объектов должен находиться абстрактный класс?
Абстрактные классы - это классы, которые содержат или наследуют без переопределения хотя бы одну чистую виртуальную функцию. 
Абстрактный класс определяет интерфейс для переопределения производными классами.

8.	Что такое событие? Для чего используются события?
События лучше всего представить себе как пакеты информации, 
которыми обмениваются объекты и которые создаются объектно-ориентированной средой в ответ на те 
или иные действия пользователя. 

9.	Какие характеристики должно иметь событие-сообщение?
•	evMessage  событие-сообщение от объекта.
Для события от объекта (evMessage) задаются два параметра :
•	command – код команды, которую необходимо выполнить при появлении данного события;
•	передаваемая с событием информация (сообщение).

10.	Привести пример структуры, описывающей событие.
void TDerivedClass::HandleEvent(TEvent& event)
{ //Вызов обработчика событий базового класса
TBaseClass::handleEvent( event );
if( event.what == evCommand ) // Если обработчик событий базового	класса
// событие не обработал
{
switch( event.message.command )
{
case cmCommand1:
// Обработка команды cmCommand1
// Очистка события СlearEvent( event );
break; case cmCommand2:
// Обработка команды cmCommand2
СlearEvent( event ); break;
…
case cmCommandN:
// Обработка команды cmCommandN
СlearEvent( event ); break;
default: // событие не обработано
break;
}
};
}

11.	Задана структура события
struct TEvent
{
 
int what; 
union
{


}
MouseEventType mouse; 
KeyDownEvent keyDown; 
MessageEvent message;
 
};
Какие значения, и в каких случаях присваиваются полю what?
int what - тип события

12.	Задана структура события
struct TEvent
{
int what;//тип события
union
{
int command;//код комманды
struct//параметры команды
{
int message; int a;
};
};
};
Какие значения, и в каких случаях присваиваются полю command?
•	command – код команды, которую необходимо выполнить при появлении данного события;

13.	Задана структура события
struct TEvent
{
int what;//тип события
union
{
int command;//код комманды
struct//параметры команды
{
int message; int a;
};
};
};
Для чего используются поля a и message?
параметр команды

14.	Какие методы необходимы для организации обработки сообщений?
GetEvent – формирование события;
Execute реализует главный цикл обработки событий. Он постоянно получает событие путем вызова GetEvent и обрабатывает их с помощью HandleEvent. Этот цикл завершается, когда поступит событие «конец».
HandleEvent – обработчик событий. Обрабатывает каждое событие нужным для него образом. Если объект должен обрабатывать определенное событие (сообщение), то его метод HandleEvent должен распознавать это событие и реагировать на него должным образом. Событие может распознаваться, например, по коду команды (поле command).
ClearEvent очищает событие, когда оно обработано, чтобы оно не обрабатывалось
далее.
Обработчик событий (метод HandleEvent).
Получив событие (структуру типа TEvent), обработчик событий для класса
TDerivedClass обрабатывает его по следующей схеме:


15.	Какой вид имеет главный цикл обработки событий-сообщений?
Главный цикл обработки событий реализуется в методе 
Execute главной группы- объекта “прикладная программа” по следующей схеме:
int TMyApp::Execute()
{
do
{
endState=0;
GetEvent(event); //получить событие
HandleEvent(event); //обработать событие
//событие осталось не обработано
if(event.what!=evNothing) EventError(event);
}
while(!Valid()); return endState;
}


16.	Какую функцию выполняет метод ClearEvent()? Каким образом?
ClearEvent очищает событие, присваивая полю event.What значение evNothing.

17.	Какую функцию выполняет метод HandleEvent ()?Каким образом?
HandleEvent – обработчик событий. Обрабатывает каждое событие нужным для него образом. 
Если объект должен обрабатывать определенное событие (сообщение), 
то его метод HandleEvent должен распознавать это событие и реагировать на него должным образом. 
Событие может распознаваться, например, по коду команды (поле command).

18.	Какую функцию выполняет метод GetEvent ()?
GetEvent – формирование события;

19.	Для чего используется поле EndState? Какой класс (объект) содержит это поле?
EndExec изменяет значение private – переменной EndState. Значение этой переменной проверяет метод–функция Valid, 
возвращающая значение true, если “конец работы”. 

20.	Для чего используется функция Valid()?
Тогда метод Valid группы, вызывая методы Valid своих подэлементов, 
возвратит true, если все они возвратят true. Это гарантирует, что программа завершит свою работу, 
когда завершат работу все ее элементы.

